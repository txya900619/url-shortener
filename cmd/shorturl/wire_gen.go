// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/google/wire"
	"github.com/scylladb/gocqlx/v2"
	"github.com/txya900619/url-shortener/internal/shorturl/adapters"
	"github.com/txya900619/url-shortener/internal/shorturl/app"
	"github.com/txya900619/url-shortener/internal/shorturl/domain/shorturl"
	"github.com/txya900619/url-shortener/internal/shorturl/ports"
	"github.com/txya900619/url-shortener/pkg/goredis"
	"github.com/txya900619/url-shortener/pkg/grpc"
)

// Injectors from wire.go:

func initHttpServer(gocqlxClient *gocqlx.Session) (*ports.HttpServer, error) {
	cassandraShortUrlRepository := adapters.NewCassandraShortUrlRepository(gocqlxClient)
	universalClient := goredis.NewGoRedisClient()
	redisCacheShortUrlRepository := adapters.NewRedisCacheShortUrlRepository(universalClient)
	keyServiceClient, err := grpc.NewKGSClient()
	if err != nil {
		return nil, err
	}
	keyGrpc := adapters.NewKeyGrpc(keyServiceClient)
	shortUrlService := app.NewShortUrlService(cassandraShortUrlRepository, redisCacheShortUrlRepository, keyGrpc)
	httpServer := ports.NewHttpServer(shortUrlService)
	return httpServer, nil
}

// wire.go:

var (
	repositorySet      = wire.NewSet(adapters.NewCassandraShortUrlRepository, wire.Bind(new(shorturl.Repository), new(*adapters.CassandraShortUrlRepository)))
	keyServiceSet      = wire.NewSet(grpc.NewKGSClient, adapters.NewKeyGrpc, wire.Bind(new(app.KeyService), new(adapters.KeyGrpc)))
	cacheRepositorySet = wire.NewSet(adapters.NewRedisCacheShortUrlRepository, wire.Bind(new(shorturl.CacheRepository), new(*adapters.RedisCacheShortUrlRepository)))
)
